"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[626],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1232:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={},s="Referencing GSC and GSC dump",c={unversionedId:"gsc-reference",id:"gsc-reference",isDocsHomePage:!1,title:"Referencing GSC and GSC dump",description:'The H1 GSC Dump is still a work-in-progress that dump that mostly contains disassembled "GSC asm" files, which contains the bytecode for GSC. Some files have decompiled into plain GSC format, but the decompiler currently has a error that needs to be fixed. GSC bytecode is stack based, so it may be a bit confusing at first but it\'s easy to understand when it comes down to it. If you need help with GSC bytecode, refer to the #scripting channel in the Discord and assistance is provided.',source:"@site/docs/gsc-reference.md",sourceDirName:".",slug:"/gsc-reference",permalink:"/gsc-reference",editUrl:"https://github.com/h1-mod/website/tree/docs/edit/docs/gsc-reference.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Lua Syntax",permalink:"/script-syntax"},next:{title:"LUI Scripting",permalink:"/ui-scripting"}},p=[{value:"Resources",id:"resources",children:[],level:2},{value:"Calling GSC functions",id:"calling-gsc-functions",children:[],level:2},{value:"Hooking (detouring) GSC functions",id:"hooking-detouring-gsc-functions",children:[],level:2},{value:"Incorrect/missing symbols on H1-Mod",id:"incorrectmissing-symbols-on-h1-mod",children:[],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"referencing-gsc-and-gsc-dump"},"Referencing GSC and GSC dump"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mjkzy/h1-gsc-dump"},"H1 GSC Dump"),' is still a work-in-progress that dump that mostly contains disassembled "GSC asm" files, which contains the bytecode for GSC. Some files have decompiled into plain GSC format, but the decompiler currently has a error that needs to be fixed. GSC bytecode is stack based, so it may be a bit confusing at first but it\'s easy to understand when it comes down to it. If you need help with GSC bytecode, refer to the ',(0,r.kt)("inlineCode",{parentName:"p"},"#scripting")," channel in the Discord and assistance is provided."),(0,r.kt)("p",null,"(this documentation is based off the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mjkzy/h1-gsc-dump/blob/main/README.md"},"README of H1 GSC Dump"),")"),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/mjkzy/iw6-gsc-dump"},"IW6 GSC Dump")," (provides comments, functions, methods, variables, dev comments, etc.)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/mjkzy/gsc-tool-h1/tree/h1-symbols"},"gsc-tool fork for H1"))),(0,r.kt)("h2",{id:"calling-gsc-functions"},"Calling GSC functions"),(0,r.kt)("p",null,"Calling GSC functions from Lua is made easy thanks to fed. To do so, you need to use the GSC dump and figure out what a file may be named and what a function may be named. A function/file may have a ",(0,r.kt)("inlineCode",{parentName:"p"},"_ID<decimal>")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"_id_<hex>")," prefix, which you'll figure out from testing and the GSC dump."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"scriptcall")," function is usually called on any sort of player entity or the level entity. To call on a player, doing ",(0,r.kt)("inlineCode",{parentName:"p"},"player:scriptcall(file, function, args)")," will work. However, if the function you are calling is from the level entity, you would use ",(0,r.kt)("inlineCode",{parentName:"p"},"game:scriptcall(file, function, args)")," from the game object."),(0,r.kt)("p",null,"In this example, we are going to be calling ",(0,r.kt)("inlineCode",{parentName:"p"},"maps/mp/_utility::_unsetPerk")," on last stand, martyrdom, and juggernaut perks. This code should be ran in a function that has access to a player variable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'function entity:player_spawned()\n    self:scriptcall("maps/mp/_utility", "_ID1659", "specialty_pistoldeath")\n    self:scriptcall("maps/mp/_utility", "_ID1659", "specialty_grenadepulldeath")\n    self:scriptcall("maps/mp/_utility", "_ID1659", "specialty_armorvest")\nend\n\nplayer:onnotify("spawned_player", function()\n    player:player_spawned()\nend)\n')),(0,r.kt)("p",null,"(at the time of writing this, ",(0,r.kt)("inlineCode",{parentName:"p"},"_unsetperk")," doesn't contain a token in version v1.0.3. however, on v1.0.4, ",(0,r.kt)("inlineCode",{parentName:"p"},"_ID1659")," should be ",(0,r.kt)("inlineCode",{parentName:"p"},"_unsetperk"),")"),(0,r.kt)("h2",{id:"hooking-detouring-gsc-functions"},"Hooking (detouring) GSC functions"),(0,r.kt)("p",null,"Same as above, you need to know what a file may be named and what a function may be named."),(0,r.kt)("p",null,"Detouring a function redirects the function's call to the function callback you provide. The ",(0,r.kt)("inlineCode",{parentName:"p"},"game:detour")," function is always from the game object. The first parameter of the detour will ",(0,r.kt)("strong",{parentName:"p"},"always")," be the entity that called it. (as defined ",(0,r.kt)("inlineCode",{parentName:"p"},"self_")," in example)"),(0,r.kt)("p",null,"In this example, we will be hooking ",(0,r.kt)("inlineCode",{parentName:"p"},"codecallback_playerkilled")," and checking who the attacker is."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- we define a variable so we can use this in our callback function\nlocal playerkilled_hook = nil\n\n-- our callback function for the detour\nfunction playerkilled_stub(self_, einflictor, eattacker, idamage, smeansofdeath, sweapon, vdir, shitloc, timeoffset, deathanimduration)\n    if eattacker ~= nil or game:isplayer(eattacker) == 1 then\n        print("The attacker is " .. eattacker.name)\n    else\n        print("The attacker is invalid or isn\'t a player")\n    end\n\n    -- [...]\n\n    -- the invoke function will call the original function from the game\'s stock GSC. we can modify parameters here too!\n    playerkilled_hook.invoke(self_, einflictor, eattacker, idamage, smeansofdeath, sweapon, vdir, shitloc, timeoffset, deathanimduration)\nend\n\nplayerkilled_hook = game:detour("maps/mp/gametypes/_callbacksetup", "codecallback_playerkilled", playerkilled_stub)\n')),(0,r.kt)("p",null,"To disable or enable a detour, the ",(0,r.kt)("inlineCode",{parentName:"p"},".disable()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".enable()")," methods exist."),(0,r.kt)("h2",{id:"incorrectmissing-symbols-on-h1-mod"},"Incorrect/missing symbols on H1-Mod"),(0,r.kt)("p",null,"This GSC dump may contain symbols that H1-mod may or may not have named or is not correctly named. Navigating to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/h1-mod/h1-mod/blob/develop/src/client/game/scripting/function_tables.cpp"},"the function table")," and finding the function_map, method_map, & token_map maps will help you. ",(0,r.kt)("inlineCode",{parentName:"p"},"CTRL + F")," (Find) and search your desired value (ex: ",(0,r.kt)("inlineCode",{parentName:"p"},"isplayer"),") and see if it exists."),(0,r.kt)("p",null,"If the symbol you are trying to call isn't named, then you have to the ",(0,r.kt)("inlineCode",{parentName:"p"},"_func_<hex>")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"_meth_<hex>")," prefix. For example, if ",(0,r.kt)("inlineCode",{parentName:"p"},"isplayer")," wasn't properly named, then you would refer to the hexdecimal value (",(0,r.kt)("inlineCode",{parentName:"p"},"0x1AD"),"). You would call this function as ",(0,r.kt)("inlineCode",{parentName:"p"},"game:_func_1AD(player)"),"."))}u.isMDXComponent=!0}}]);