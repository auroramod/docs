"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[583],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=m(n),c=r,f=u["".concat(l,".").concat(c)]||u[c]||d[c]||i;return n?a.createElement(f,o(o({ref:t},s),{},{components:n})):a.createElement(f,o({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var m=2;m<i;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5149:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return s},default:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],p={},l="Map Porting (S1 -> H1 <- H2)",m={unversionedId:"map-porting-s1",id:"map-porting-s1",isDocsHomePage:!1,title:"Map Porting (S1 -> H1 <- H2)",description:"To port maps from S1 or H2, you must use x64-zt. You can also download the S1 Asset Listing from here",source:"@site/docs/map-porting-s1.md",sourceDirName:".",slug:"/map-porting-s1",permalink:"/map-porting-s1",editUrl:"https://github.com/h1-mod/docs/blob/main/docs/map-porting-s1.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Map Porting (IW3/4/5 -> H1)",permalink:"/map-porting-iw5"},next:{title:"Ranked Multiplayer",permalink:"/ranked"}},s=[{value:"Extra steps",id:"extra-steps",children:[],level:3},{value:"Red images",id:"red-images",children:[],level:3},{value:"&quot;REF&quot; red models",id:"ref-red-models",children:[],level:3},{value:"Textures are black/gray/white/red",id:"textures-are-blackgraywhitered",children:[],level:3},{value:"Vertex type X doesn&#39;t have the information used by shader Y in material Z",id:"vertex-type-x-doesnt-have-the-information-used-by-shader-y-in-material-z",children:[],level:3},{value:"Bad weaponinfo X specified for turret. It likely needs to be precached in script.",id:"bad-weaponinfo-x-specified-for-turret-it-likely-needs-to-be-precached-in-script",children:[],level:3},{value:"animation &#39;X&#39; not defined in anim tree &#39;{animtree name}&#39;",id:"animation-x-not-defined-in-anim-tree-animtree-name",children:[],level:3}],d={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"map-porting-s1---h1---h2"},"Map Porting (S1 -> H1 <- H2)"),(0,i.kt)("p",null,"To port maps from S1 or H2, you must use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Joelrau/x64-zt"},"x64-zt"),". You can also download the ",(0,i.kt)("a",{parentName:"p",href:"https://cdn.discordapp.com/attachments/1032511834420420640/1196505669440909372/s1_asset_listing.zip?ex=67080e3d&is=6706bcbd&hm=680cfcc7511fe2ddb124439c0b9f4ee2c58e6769e1c609f9fde69abb08c82c8a&"},"S1 Asset Listing from here")),(0,i.kt)("p",null,"Once you find the zone you want to dump ",(0,i.kt)("em",{parentName:"p"},"(example: mp_greenband from S1)"),", use the ",(0,i.kt)("inlineCode",{parentName:"p"},"dumpmap <target game> <zone>")," command and wait for your zone to dump. "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Run the command at ",(0,i.kt)("inlineCode",{parentName:"li"},"dumpmap h1 mp_greenband")),(0,i.kt)("li",{parentName:"ol"},"Find the finalized dumped zone folder at ",(0,i.kt)("inlineCode",{parentName:"li"},"%S1 game files%/dump/mp_greenband/")),(0,i.kt)("li",{parentName:"ol"},"Move the dumped folder to ",(0,i.kt)("inlineCode",{parentName:"li"},"%MWR game files%/zonetool/mp_greenband/")),(0,i.kt)("li",{parentName:"ol"},"Open x64-zt, and run the command ",(0,i.kt)("inlineCode",{parentName:"li"},"generatecsv <zone>")," ",(0,i.kt)("em",{parentName:"li"},"(example: ",(0,i.kt)("inlineCode",{parentName:"em"},"generatecsv mp_greenband"),")"))),(0,i.kt)("p",null,"After you've generated your CSV, your map can now be built. Simply run ",(0,i.kt)("inlineCode",{parentName:"p"},"buildzone mp_greenband")," to build the map."),(0,i.kt)("h3",{id:"extra-steps"},"Extra steps"),(0,i.kt)("p",null,"For the map to look correct, you must create a GSC file for your map. This will be a script that will be executed once the map starts. This script differs on multiplayer & singleplayer. Dumping a map from S1 or H2 should have a map GSC you can use or reference to make a new one."),(0,i.kt)("p",null,"Multiplayer:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'main()\n{\n    maps\\createfx\\mapname_fx::main();\n    maps\\mp\\mapname_fx::main();\n    maps\\mp\\_load::main();\n    maps\\mp\\_compass::setupminimap("compass_map_mapname");  // change compass name here\n}\n')),(0,i.kt)("p",null,"Singleplayer:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'main()\n{\n    maps\\createfx\\mapname_fx::main(); // only if this script exists\n    maps\\mapname_fx::main(); // only if this script exists\n    maps\\_load::main();\n    maps\\_compass::setupminimap("compass_map_mapname"); // change compass name here\n}\n')),(0,i.kt)("h3",{id:"red-images"},"Red images"),(0,i.kt)("p",null,"Red images indicates that you are missing images. Dump the source game's common fastfile ",(0,i.kt)("em",{parentName:"p"},"(most of the time it is called ",(0,i.kt)("inlineCode",{parentName:"em"},"common_mp")," for multiplayer and ",(0,i.kt)("inlineCode",{parentName:"em"},"common")," for singleplayer)")," using the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"dumpzone <target game> common_mp\n")),(0,i.kt)("p",null,'Note that a "patch" version of the common fastfile always exists (example: ',(0,i.kt)("inlineCode",{parentName:"p"},"patch_common_mp"),"), so the assets could also be there."),(0,i.kt)("p",null,"You should then move this folder from ",(0,i.kt)("inlineCode",{parentName:"p"},"dump/")," into a folder called ",(0,i.kt)("inlineCode",{parentName:"p"},"zonetool_paths")," in your target game's root directory. x64-zt will look for assets in any folder inside zonetool_paths. Alternatively, you can copy the contents of the dumped folder into the map's zonetool folder, but this is not advised as it will take a long time."),(0,i.kt)("h3",{id:"ref-red-models"},'"REF" red models'),(0,i.kt)("p",null,"The process to fix is relatively the same with images."),(0,i.kt)("h3",{id:"textures-are-blackgraywhitered"},"Textures are black/gray/white/red"),(0,i.kt)("p",null,"This probably means that zonetool failed to dump the streamed images. To check if this is the case, see if the ",(0,i.kt)("inlineCode",{parentName:"p"},"streamed_images")," folder contains .pixels files, if not then something went wrong. Most likely zonetool was unable to find the source game's image files. This should not happen."),(0,i.kt)("h3",{id:"vertex-type-x-doesnt-have-the-information-used-by-shader-y-in-material-z"},"Vertex type X doesn't have the information used by shader Y in material Z"),(0,i.kt)("p",null,"This most likely indicates you are missing that particular material, the same fix as issue #1 should apply."),(0,i.kt)("h3",{id:"bad-weaponinfo-x-specified-for-turret-it-likely-needs-to-be-precached-in-script"},"Bad weaponinfo X specified for turret. It likely needs to be precached in script."),(0,i.kt)("p",null,"This indicates that the original map includes a turret, you can either:"),(0,i.kt)("p",null,"Simply remove the turret entirely (this is advised unless you really want the turret). To do this, open the ",(0,i.kt)("inlineCode",{parentName:"p"},"<mapname>.d3dbsp.ents")," file you will find in ",(0,i.kt)("inlineCode",{parentName:"p"},"zonetool/mapname/maps/mp")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"zonetool/mapname/maps/")," and search for ",(0,i.kt)("inlineCode",{parentName:"p"},'"weaponinfo"'),". Once found, remove the entire section that includes it, example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n"bottomarc" "70"\n"rightarc" "40"\n"leftarc" "40"\n"targetname" "minigun_turret_2"\n"spawnflags" "0"\n"toparc" "10"\n"classname" "misc_turret"\n"export" "1"\n"model" "npc_minigun_turret"\n"weaponinfo" "turret_minigun_mp"\n"origin" "1004.5 -80 865"\n"angles" "0 180 0"\n}\n')),(0,i.kt)("p",null,'Everything from and including the opening bracket to the closing bracket should be removed. Repeat this for every case of "weaponinfo" in the file.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Or")," you can add the required assets (usually just the weapon): Repeat the same process as for removing it but don't actually remove it and simply save every instance of the value of ",(0,i.kt)("inlineCode",{parentName:"p"},'"weaponinfo"'),"."),(0,i.kt)("p",null,"For example, the value of one of the weaponinfo's is ",(0,i.kt)("inlineCode",{parentName:"p"},"turret_minigun_mp"),". This just gets parsed in your CSV as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"weapon,turret_minigun_mp\n")),(0,i.kt)("h3",{id:"animation-x-not-defined-in-anim-tree-animtree-name"},"animation 'X' not defined in anim tree '{animtree name}'"),(0,i.kt)("p",null,"This means the map is using an animation tree that is not defined on the target game. Dump the ",(0,i.kt)("inlineCode",{parentName:"p"},"{animtree name}.atr")," of the source game, which is usually found in the common fastfile ",(0,i.kt)("em",{parentName:"p"},"(refer to issue #1)"),", copy the file (including its folder: ",(0,i.kt)("inlineCode",{parentName:"p"},"animtrees/{animtree name}.atr"),") into a folder called ",(0,i.kt)("strong",{parentName:"p"},"override")," (create it if it doesn't exist) inside ",(0,i.kt)("inlineCode",{parentName:"p"},"[target game]/zonetool/mapname/"),", then include it in the csv (refer to issue #1)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"rawfile,override/animtrees/{animtree name}.atr\n")))}u.isMDXComponent=!0}}]);